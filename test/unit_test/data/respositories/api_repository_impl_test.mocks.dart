// Mocks generated by Mockito 5.4.1 from annotations
// in clean_architecture_flutter/test/unit_test/data/respositories/api_repository_impl_test.dart.
// Do not manually edit this file.

// @dart=2.19

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i6;

import 'package:clean_architecture_flutter/src/data/datasources/remote/news_api.dart'
    as _i5;
import 'package:clean_architecture_flutter/src/domain/models/article.dart'
    as _i4;
import 'package:clean_architecture_flutter/src/domain/models/responses/breaking_news_response.dart'
    as _i2;
import 'package:mockito/mockito.dart' as _i1;
import 'package:retrofit/dio.dart' as _i3;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeBreakingNewsResponse_0 extends _i1.SmartFake
    implements _i2.BreakingNewsResponse {
  _FakeBreakingNewsResponse_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeHttpResponse_1<T> extends _i1.SmartFake
    implements _i3.HttpResponse<T> {
  _FakeHttpResponse_1(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [BreakingNewsResponse].
///
/// See the documentation for Mockito's code generation for more information.
class MockBreakingNewsResponse extends _i1.Mock
    implements _i2.BreakingNewsResponse {
  MockBreakingNewsResponse() {
    _i1.throwOnMissingStub(this);
  }

  @override
  String get status => (super.noSuchMethod(
        Invocation.getter(#status),
        returnValue: '',
      ) as String);
  @override
  int get totalResults => (super.noSuchMethod(
        Invocation.getter(#totalResults),
        returnValue: 0,
      ) as int);
  @override
  List<_i4.Article> get articles => (super.noSuchMethod(
        Invocation.getter(#articles),
        returnValue: <_i4.Article>[],
      ) as List<_i4.Article>);
  @override
  List<Object?> get props => (super.noSuchMethod(
        Invocation.getter(#props),
        returnValue: <Object?>[],
      ) as List<Object?>);
  @override
  _i2.BreakingNewsResponse copyWith({
    String? status,
    int? totalResults,
    List<_i4.Article>? articles,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #copyWith,
          [],
          {
            #status: status,
            #totalResults: totalResults,
            #articles: articles,
          },
        ),
        returnValue: _FakeBreakingNewsResponse_0(
          this,
          Invocation.method(
            #copyWith,
            [],
            {
              #status: status,
              #totalResults: totalResults,
              #articles: articles,
            },
          ),
        ),
      ) as _i2.BreakingNewsResponse);
  @override
  Map<String, dynamic> toMap() => (super.noSuchMethod(
        Invocation.method(
          #toMap,
          [],
        ),
        returnValue: <String, dynamic>{},
      ) as Map<String, dynamic>);
}

/// A class which mocks [NewsApi].
///
/// See the documentation for Mockito's code generation for more information.
class MockNewsApi extends _i1.Mock implements _i5.NewsApi {
  @override
  _i6.Future<_i3.HttpResponse<_i2.BreakingNewsResponse>>
      getBreakingNewsArticles({
    String? apiKey,
    String? country,
    String? category,
    int? page,
    int? pageSize,
  }) =>
          (super.noSuchMethod(
            Invocation.method(
              #getBreakingNewsArticles,
              [],
              {
                #apiKey: apiKey,
                #country: country,
                #category: category,
                #page: page,
                #pageSize: pageSize,
              },
            ),
            returnValue:
                _i6.Future<_i3.HttpResponse<_i2.BreakingNewsResponse>>.value(
                    _FakeHttpResponse_1<_i2.BreakingNewsResponse>(
              this,
              Invocation.method(
                #getBreakingNewsArticles,
                [],
                {
                  #apiKey: apiKey,
                  #country: country,
                  #category: category,
                  #page: page,
                  #pageSize: pageSize,
                },
              ),
            )),
            returnValueForMissingStub:
                _i6.Future<_i3.HttpResponse<_i2.BreakingNewsResponse>>.value(
                    _FakeHttpResponse_1<_i2.BreakingNewsResponse>(
              this,
              Invocation.method(
                #getBreakingNewsArticles,
                [],
                {
                  #apiKey: apiKey,
                  #country: country,
                  #category: category,
                  #page: page,
                  #pageSize: pageSize,
                },
              ),
            )),
          ) as _i6.Future<_i3.HttpResponse<_i2.BreakingNewsResponse>>);
}
